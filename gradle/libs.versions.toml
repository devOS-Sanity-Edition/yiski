[versions]
# Aviation
aviation = "7d1dcef7"
# Exposed
exposed = "0.56.0"
# GitHub API
github-api = "2.0.0-alpha-2"
# JDA
jda = "5.2.1"
jda-ktx = "0.12.0"
kotlin-logging = "7.0.3"
# Kotlin
kotlinx-coroutines = "1.9.0"
kotlinx-serialization = "1.7.3"
ktoml = "0.5.2"
# Ktor
ktor = "3.0.1"
# Lavalink
lavalink-client = "3.1.0"
# Logback
logback = "1.5.12"
# OkHttp
okhttp = "5.0.0-alpha.14"
pcm-audio-utils = "0.1.0"
# PostgresQL
postgresql = "42.7.4"
# Reflection
reflection = "0.10.2"
# SLF4J
slf4j = "2.1.0-alpha1"
# Yiski Shared Data
yiski-shared-data = "0.1.0"

[libraries]
# Aviation
aviation = { module = "xyz.artrinix:aviation", version.ref = "aviation" }
# Exposed
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-crypt = { module = "org.jetbrains.exposed:exposed-crypt", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
# GitHub API
github-api = { module = "org.kohsuke:github-api", version.ref = "github-api" }
# JDA
jda = { module = "net.dv8tion:JDA", version.ref = "jda" }
jda-ktx = { module = "club.minnced:jda-ktx", version.ref = "jda-ktx" }
kotlin-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable" }
# Kotlin Logging
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }
kotlin-scripting-jsr223 = { module = "org.jetbrains.kotlin:kotlin-scripting-jsr223" }
# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
# Ktoml
ktoml-core = { module = "com.akuleshov7:ktoml-core", version.ref = "ktoml" }
ktoml-file = { module = "com.akuleshov7:ktoml-file", version.ref = "ktoml" }
ktoml-source = { module = "com.akuleshov7:ktoml-source", version.ref = "ktoml" }
# Ktor
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-cio-jvm = { module = "io.ktor:ktor-client-cio-jvm", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
# Ktor Server
ktor-server-cio = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-content-negogiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
# Lavalink
lavalink-client = { module = "dev.arbjerg:lavalink-client", version.ref = "lavalink-client" }
# Logback
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logback-core = { module = "ch.qos.logback:logback-core", version.ref = "logback" }
# OkHttp [needed for GitHub API Connector if I want to retrieve HTTP codes]
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
pcm-audio-utils = { module = "dev.deftu:pcm-audio-utils", version.ref = "pcm-audio-utils" }
# PostgresQL
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
# Reflection
reflection = { module = "org.reflections:reflections", version.ref = "reflection" }
# SLF4J
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
# Yiski Shared Data
yiski-shared-data = { module = "one.devos:yiski-shared-data", version.ref = "yiski-shared-data" }

[bundles]
exposed = [
    "exposed-core",
    "exposed-crypt",
    "exposed-dao",
    "exposed-jdbc",
    "exposed-json",
    "exposed-kotlin-datetime",
]
jda = [
    "aviation",
    "jda",
    "jda-ktx",
]
kotlin = [
    "kotlin-compiler-embeddable",
    "kotlin-scripting-jsr223",
    "kotlin-stdlib",
]
kotlinx = [
    "kotlinx-coroutines-core",
    "kotlinx-serialization-json",
]
ktoml = [
    "ktoml-core",
    "ktoml-file",
    "ktoml-source",
]
ktor-client = [
    "ktor-client-cio",
    "ktor-client-cio-jvm",
    "ktor-client-content-negotiation",
    "ktor-client-core",
]
ktor-server = [
    "ktor-server-cio",
    "ktor-server-config-yaml",
    "ktor-server-content-negogiation",
    "ktor-server-core",
]
ktor-universal = [
    "ktor-serialization-kotlinx-json",
]
lavalink = [
    "lavalink-client",
    "pcm-audio-utils",
]
logback = [
    "logback",
    "logback-core",
]

[plugins]
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
